dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jooq', version: springBootVersion
    implementation group: 'org.postgresql', name: 'postgresql', version: postgresVersion
}

buildscript {
    repositories {
        gradlePluginPortal()
    }

    dependencies {
        classpath 'nu.studer:gradle-jooq-plugin:7.0'
    }
}

apply plugin: nu.studer.gradle.jooq.JooqPlugin

repositories {
    mavenCentral()
}

dependencies {
    jooqGenerator group: 'org.postgresql', name: 'postgresql', version: postgresVersion
}

jooq {
    configurations {
        main {
            generateSchemaSourceOnCompilation = true
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5433/test'
                    user = 'postgres'
                    password = 'postgres'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'fleet'
                        excludes = 'schema_version_.*'
                    }
                    generate {
                        deprecated = false
                        records = false
                        immutablePojos = false
                        fluentSetters = false
                    }
                    target {
                        packageName = 'nu.studer.sample'
                        directory = 'build/generated-src/jooq/main'
                    }
                    strategy.name = "org.jooq.codegen.DefaultGeneratorStrategy"
                }
            }
        }
    }
}